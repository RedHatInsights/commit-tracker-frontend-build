{"version":3,"file":"js/CommitPage.b7f9790a0f50e65b199f.js","mappings":"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","sources":["webpack:///./src/Routes/CommitPage/CommitPage.js"],"sourcesContent":["//import React, { useState, useEffect } from 'react';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { StackItem, Stack, Pagination } from '@patternfly/react-core';\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Table,\n    TableHeader,\n    TableBody,\n    TableVariant\n} from '@patternfly/react-table';\n\nimport PropTypes from 'prop-types';\n\nimport './commit-page.scss';\n//import { render } from 'enzyme';\n\n/**\n * A smart component that handles all the api calls and data needed by the dumb components.\n * Smart components are usually classes.\n *\n * https://reactjs.org/docs/components-and-props.html\n * https://medium.com/@thejasonfile/dumb-components-and-smart-components-e7b33a698d43\n */\n\nexport class CommitPage extends React.Component {\n    static propTypes = {\n        location: PropTypes.object,\n        history: PropTypes.object,\n        eventEmitter: PropTypes.object,\n        match: PropTypes.object\n    };\n\n    constructor(props) {\n        super(props);\n        console.log(props.match);\n        const params = new URLSearchParams(props.location.search);\n\n        let limit = params.get('limit') === null ? 10 : params.get('limit');\n        let offset = params.get('offset') === null ? 0 : params.get('offset');\n        let page = params.get('page') === null ? 1 : params.get('page');\n        let pageSize = params.get('pageSize') === null ? 10 : params.get('pageSize');\n        this.state = {\n            page,\n            pageSize,\n            data: {},\n            columns: [],\n            rows: {},\n            stats: {},\n            limit,\n            offset,\n            url: '',\n            meta: {},\n            app: props.match.params.app,\n            commit: props.match.params.commit\n        };\n        this.params = new URLSearchParams(props.location.search);\n    }\n\n    grabResults() {\n        console.log(this.state.url);\n        fetch(this.state.url)\n        .then(response => response.json())\n        .then(data => this.setState({ data }, () => {\n            let cols = Object.keys(data.data[0]);\n            let rows = [];\n            data.data.forEach(function (item) {\n                let row = [];\n                cols.forEach(function (item2) {\n                    if (item2 === 'app') {\n                        let url = 'internal/commit-tracker/' + item[item2];\n                        row.push({ title: <a href={url}>{item[item2]}</a> });\n                    } else if (item2 === 'commit_hash') {\n                        let url = 'internal/commit-tracker/' + item.app + '/' + item[item2];\n                        row.push({ title: <a href={url}>{item[item2]}</a> });\n                    } else if (item2 === 'html_url') {\n                        let url = item.html_url;\n                        row.push({ title: <a href={url}>{item[item2]}</a> });\n                    } else {\n                        row.push(item[item2]);\n                    }\n                });\n                rows.push(row);\n            });\n\n            cols = cols.map(c => c.replace('_', ' '));\n            this.setState({ rows, columns: cols, meta: data.meta });\n        }));\n    }\n\n    componentDidMount() {\n        this.updateUrl();\n    }\n\n    updateUrl() {\n        let urlBit = '/api/commit-tracker/track/';\n\n        if (this.state.app !== undefined) {\n            urlBit += this.state.app + '/';\n            // statsUrl += app + '/';\n        }\n\n        if (this.commit !== undefined) {\n            urlBit += this.state.commit + '/';\n            // statsUrl += commit + '/';\n        }\n\n        urlBit += '?offset=' + ((this.state.page - 1) * this.state.pageSize);\n        urlBit += '&limit=' + this.state.pageSize;\n        urlBit += '&reverse=true';\n        this.setState({ url: urlBit }, () => {\n            this.grabResults();\n        });\n    }\n\n    setPage = (_event, pageNumber) => {\n        console.log('NEXT PAGE');\n        this.setState({ page: pageNumber }, () => {\n            this.updateUrl();\n        });\n    }\n\n    setPageSize = (_event, perPage) => {\n        this.setState({ pageSize: perPage }, () => {\n            this.updateUrl();\n        });\n    }\n\n    render() {\n        document.title = 'Commit Tracker';\n        const {\n            app,\n            commit,\n            data,\n            columns,\n            rows,\n            page,\n            pageSize,\n            meta\n        } = this.state;\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title={app}/>\n                    <p> {commit} </p>\n                </PageHeader>\n                <Main>\n                    <Stack hasGutter>\n                        <StackItem>\n                            <Stack hasGutter>\n                                <StackItem>\n                                    <Table aria-label=\"Compact Table\" variant={TableVariant.compact} cells={columns} rows={rows}>\n                                        <TableHeader />\n                                        <TableBody />\n                                    </Table>\n                                    <Pagination\n                                        widgetId=\"pagination-options-menu-bottom\"\n                                        perPage={pageSize}\n                                        page={page}\n                                        itemCount={meta.count}\n                                        dropDirection=\"up\"\n                                        onSetPage={this.setPage}\n                                        onPerPageSelect={this.setPageSize}\n                                        style={ { marginTop: '1rem' } }\n                                    />\n                                    <pre>{JSON.stringify(this.stats, null, 2)}</pre>\n                                    <pre style={{ visibility: 'hidden' }}>{JSON.stringify(data, null, 2)}</pre>\n                                </StackItem>\n                            </Stack>\n                        </StackItem>\n                    </Stack>\n                </Main>\n            </React.Fragment>\n        );\n    };\n};\n\nexport default withRouter(CommitPage);\n"],"names":["CommitPage","props","_event","pageNumber","console","log","setState","page","updateUrl","perPage","pageSize","match","params","URLSearchParams","location","search","limit","get","offset","state","data","columns","rows","stats","url","meta","app","commit","this","fetch","then","response","json","cols","Object","keys","forEach","item","row","item2","push","title","href","html_url","map","c","replace","urlBit","undefined","grabResults","document","PageHeader","PageHeaderTitle","Main","Stack","hasGutter","StackItem","Table","variant","TableVariant","cells","TableHeader","TableBody","Pagination","widgetId","itemCount","count","dropDirection","onSetPage","setPage","onPerPageSelect","setPageSize","style","marginTop","JSON","stringify","visibility","React","PropTypes","history","eventEmitter","withRouter"],"sourceRoot":""}