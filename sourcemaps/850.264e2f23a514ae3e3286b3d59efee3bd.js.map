{"version":3,"file":"js/850.9329e75793678c40ae55.js","mappings":"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","sources":["webpack:///./src/Utilities/asyncComponent.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/Utilities/getBaseName.js","webpack:///./src/store/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components';\n\n/**\n * Webpack allows loading components asynchronously by using import().\n *\n *      Ex) const Component = asyncComponent(() => import('component');\n *\n *          class aClass extends React.Component {\n *              render() {\n *                  return (<Component prop1=\"prop1\" prop2=\"prop2\" ... />);\n *              }\n *          }\n *\n *  https://reactjs.org/docs/higher-order-components.html\n *\n * @param importComponent a function that contains and async import statement\n *      Ex) () => import('react-component')\n *\n * @returns {AsyncComponent} The imported component or can return a loading\n */\nexport default function asyncComponent(importComponent) {\n    class AsyncComponent extends Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                component: null\n            };\n        }\n\n        async componentDidMount() {\n            const { default: component } = await importComponent();\n\n            this.setState({\n                component\n            });\n        }\n\n        render() {\n            const C = this.state.component;\n\n            return C ? <C { ...this.props } /> : <Skeleton />;\n        }\n    }\n\n    return AsyncComponent;\n}\n","import { Redirect, Route, Switch, useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport asyncComponent from './Utilities/asyncComponent';\nimport some from 'lodash/some';\n\n/**\n * Aysnc imports of components\n *\n * https://webpack.js.org/guides/code-splitting/\n * https://reactjs.org/docs/code-splitting.html\n *\n * pros:\n *      1) code splitting\n *      2) can be used in server-side rendering\n * cons:\n *      1) nameing chunk names adds unnecessary docs to code,\n *         see the difference with DashboardMap and InventoryDeployments.\n *\n */\nconst CommitPage = asyncComponent(() => import(/* webpackChunkName: \"CommitPage\" */ './Routes/CommitPage/CommitPage'));\nconst OopsPage = asyncComponent(() => import(/* webpackChunkName: \"OopsPage\" */ './Routes/OopsPage/OopsPage'));\nconst NoPermissionsPage = asyncComponent(() => import(/* webpackChunkName: \"NoPermissionsPage\" */ './Routes/NoPermissionsPage/NoPermissionsPage'));\n\nconst paths = {\n    pageAppCommit: '/:app/:commit',\n    pageApp: '/:app',\n    page: '/',\n    oops: '/oops',\n    noPermissions: '/no-permissions'\n};\n\nconst InsightsRoute = ({ component: Component, rootClass, ...rest }) => {\n    const root = document.getElementById('root');\n    root.removeAttribute('class');\n    root.classList.add(`page__${rootClass}`, 'pf-c-page__main');\n    root.setAttribute('role', 'main');\n\n    return (<Route {...rest} component={Component} />);\n};\n\nInsightsRoute.propTypes = {\n    component: PropTypes.func,\n    rootClass: PropTypes.string\n};\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = () => {\n    const path = useLocation().pathname;\n\n    return (\n        <Switch>\n            <InsightsRoute path={paths.pageAppCommit} component={CommitPage} rootClass='samplePage'/>\n            <InsightsRoute path={paths.pageApp} component={CommitPage} rootClass='samplePage'/>\n            <InsightsRoute path={paths.page} component={CommitPage} rootClass='samplePage' />\n            <InsightsRoute path={paths.oops} component={OopsPage} rootClass='oopsPage' />\n            <InsightsRoute path={paths.noPermissions} component={NoPermissionsPage} rootClass='noPermissionsPage' />\n            { /* Finally, catch all unmatched routes */}\n            <Route render={() => some(paths, p => p === path) ? null : (<Redirect to={paths.samplePage} />)} />\n        </Switch>\n    );\n};\n\nRoutes.propTypes = {\n    childProps: PropTypes.shape({\n        history: PropTypes.shape({\n            push: PropTypes.func\n        })\n    })\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './Routes';\nimport './App.scss';\n\nimport { Provider } from 'react-redux';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst registry = getRegistry();\nregistry.register({ notifications: notificationsReducer });\n\nclass App extends Component {\n\n    componentDidMount () {\n        insights.chrome.init();\n        // TODO change this to your appname\n        insights.chrome.identifyApp('commit-tracker');\n\n        this.appNav = insights.chrome.on('APP_NAVIGATION', event => this.props.history.push(`/${event.navId}`));\n    }\n\n    componentWillUnmount () {\n        this.appNav();\n    }\n\n    render () {\n        return (\n            <Provider store={ registry.getStore() }>\n                <NotificationsPortal />\n                <Routes childProps={ this.props } />\n            </Provider>\n        );\n    }\n}\n\nApp.propTypes = {\n    history: PropTypes.object\n};\n\n/**\n * withRouter: https://reacttraining.com/react-router/web/api/withRouter\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default withRouter (connect()(App));\n","function getBaseName(pathname) {\n    let release = '/';\n    const pathName = pathname.split('/');\n\n    pathName.shift();\n\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n        release = `/beta/`;\n    }\n\n    return `${release}${pathName[0]}/${pathName[1] || ''}`;\n}\n\nexport default getBaseName;\n","import ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nlet registry;\n\nexport function init (...middleware) {\n    if (registry) {\n        throw new Error('store already initialized');\n    }\n\n    registry = new ReducerRegistry({}, [\n        promiseMiddleware,\n        ...middleware\n    ]);\n\n    //If you want to register all of your reducers, this is good place.\n    /*\n     *  registry.register({\n     *    someName: (state, action) => ({...state})\n     *  });\n     */\n    return registry;\n}\n\nexport function getStore () {\n    return registry.getStore();\n}\n\nexport function register (...args) {\n    return registry.register(...args);\n}\n"],"names":["asyncComponent","importComponent","props","state","component","this","setState","C","Skeleton","Component","CommitPage","OopsPage","NoPermissionsPage","paths","pageAppCommit","pageApp","page","oops","noPermissions","InsightsRoute","rootClass","rest","root","document","getElementById","removeAttribute","classList","add","setAttribute","Route","propTypes","PropTypes","Routes","path","useLocation","pathname","Switch","render","some","p","Redirect","to","samplePage","childProps","history","push","registry","getRegistry","register","notifications","notificationsReducer","App","insights","chrome","init","identifyApp","appNav","on","event","navId","Provider","store","getStore","withRouter","connect","release","pathName","split","shift","Error","middleware","ReducerRegistry","promiseMiddleware"],"sourceRoot":""}